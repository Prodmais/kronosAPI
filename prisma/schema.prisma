generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Boards {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(40)
  description String?  @db.VarChar(255)
  isMobile    Boolean?
  createdAt   DateTime @db.Timestamptz(6)
  updatedAt   DateTime @db.Timestamptz(6)
  userId      Int
  Users       Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Tasks       Tasks[]
  @@map("boards")
}

model Messages {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(40)
  type      String    @db.VarChar(25)
  createdAt DateTime  @db.Timestamptz(6)
  updatedAt DateTime  @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  @@map("messages")
}

model Tasks {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(40)
  description String?   @db.VarChar(255)
  status      String    @db.VarChar(20)
  endDate     DateTime? @db.Timestamptz(6)
  createdAt   DateTime  @db.Timestamptz(6)
  updatedAt   DateTime  @db.Timestamptz(6)
  boardId     Int
  Boards      Boards    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  @@map("tasks")
}

model Users {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(40)
  lastName  String    @db.VarChar(40)
  email     String    @unique @db.VarChar(255)
  phone     String    @db.VarChar(11)
  password  String    @db.VarChar(255)
  type      String?   @db.VarChar(25)
  token     String?   @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Boards    Boards[]
  @@map("users")
}
